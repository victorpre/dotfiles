# Ring the bell if any background window rang a bell
set -g bell-action any

set-option -g default-shell $SHELL
# To add ssh on Mac + zsh
# ssh-add -K ~/.ssh/id_rsa &>/dev/null

set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j) || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k) || \
                          tmux select-pane -U"

bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"

bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour3
set -g message-style fg=colour16,bg=colour221,bold
set -g status-left '#[fg=colour235,bg=#ff79c6,bold] ❐ #S #[fg=#ff79c6,bg=#6272a4,nobold] #[fg=#e4e4e4,bg=#6272a4,bold] #(whoami) #[fg=#6272a4,bg=#282a36,nobold]'
set -g status-right '#[fg=#6272a4,bg=#282a36,nobold]#[fg=#e4e4e4,bg=#6272a4,bold] #(curl wttr.in/Hamburg?format=3) #[fg=#bd93f9,bg=#6272a4,bold]#[fg=#282a36,bg=#bd93f9,bold] %R  %d %b '
# set -g window-status-format '#[fg=colour234,bg=colour252,nobold] #[fg=colour235,bg=colour252,bold] #I #W #[fg=colour252,bg=colour234,nobold]'
# set -g window-status-current-format '#[fg=colour234,bg=colour3,nobold] #[fg=black,bg=colour3,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #W #[fg=colour3,bg=colour234,nobold]'
set -g window-status-separator ''

set-option -g status-interval 2

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"
# .tmux.conf -> dotfiles/tmux.conf
# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# select pane like vim :D
bind -r h select-pane -L
bind -r l select-pane -R
bind -r j select-pane -D
bind -r k select-pane -U

bind b choose-session

unbind y
bind y run "tmux show-buffer | xsel -i -b"\; display "show-buffer to clipboard!"


tmux_conf_theme_left_separator_main=''  # /!\ you don't need to install Powerline
tmux_conf_theme_left_separator_sub=''   #   you only need fonts patched with
tmux_conf_theme_right_separator_main='' #   Powerline symbols or the standalone
tmux_conf_theme_right_separator_sub=''  #   PowerlineSymbols.otf font

tmux_conf_theme_message_fg='#282a36'                    # black
tmux_conf_theme_message_bg='#ff79c6'                    # yellow
tmux_conf_theme_message_attr='bold'
set -g message-style "fg=$tmux_conf_theme_message_fg,bg=$tmux_conf_theme_message_bg,$tmux_conf_theme_message_attr"

tmux_conf_theme_message_command_fg='#ff79c6'            # yellow
tmux_conf_theme_message_command_bg='#000000'            # black
tmux_conf_theme_message_command_attr='bold'
set -g message-command-style "fg=$tmux_conf_theme_message_command_fg,bg=$tmux_conf_theme_message_command_bg,$tmux_conf_theme_message_command_attr"

# Upper right
tmux_conf_theme_mode_fg='#000000' # black
tmux_conf_theme_mode_bg='#f1fa8c'                       # yellow
tmux_conf_theme_mode_attr='bold'
setw -g mode-style "fg=$tmux_conf_theme_mode_fg,bg=$tmux_conf_theme_mode_bg,$tmux_conf_theme_mode_attr"

tmux_conf_theme_status_fg='#f8f8f2'                     # light gray
tmux_conf_theme_status_bg='#282a36'                     # dark gray
tmux_conf_theme_status_attr='none'
set -g status-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"
set -g status-left-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"
set -g status-right-style "fg=$tmux_conf_theme_status_fg,bg=$tmux_conf_theme_status_bg,$tmux_conf_theme_status_attr"

tmux_conf_theme_terminal_title='❐ #S ● #I #W'

   # tmux_conf_theme_terminal_title=$(echo "$tmux_conf_theme_terminal_title" | sed \
   #   -e 's%#{circled_window_index}%#(cut -c3- ~/.tmux.conf | sh -s _circled #I)%g' \
   #   -e 's%#{circled_session_name}%#(cut -c3- ~/.tmux.conf | sh -s _circled #S)%g' \
   #   -e 's%#{username}%#(cut -c3- ~/.tmux.conf | sh -s _username #{pane_tty} false #D)%g' \
   #   -e 's%#{hostname}%#(cut -c3- ~/.tmux.conf | sh -s _hostname #{pane_tty} false #D)%g' \
   #   -e 's%#{username_ssh}%#(cut -c3- ~/.tmux.conf | sh -s _username #{pane_tty} true #D)%g' \
   #   -e 's%#{hostname_ssh}%#(cut -c3- ~/.tmux.conf | sh -s _hostname #{pane_tty} true #D)%g')
set -g set-titles-string "tmux_conf_theme_terminal_title"

tmux_conf_theme_window_status_fg='#f8f8f2'              # light gray
tmux_conf_theme_window_status_bg='#282a36'              # dark gray
tmux_conf_theme_window_status_attr='none'
#tmux_conf_theme_window_status_format='#I #W'
tmux_conf_theme_window_status_format=' #I #W '

tmux_conf_theme_window_status_current_fg='#282a36'      # black
tmux_conf_theme_window_status_current_bg='#bd93f9'      # light blue
tmux_conf_theme_window_status_current_attr='bold'
tmux_conf_theme_window_status_current_format='#I #W'
tmux_conf_theme_window_status_current_format="#[fg=$tmux_conf_theme_window_status_bg,bg=$tmux_conf_theme_window_status_current_bg]$tmux_conf_theme_left_separator_main#[fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr] $tmux_conf_theme_window_status_current_format #[fg=$tmux_conf_theme_window_status_current_bg,bg=$tmux_conf_theme_status_bg,none]$tmux_conf_theme_left_separator_main"


setw -g window-status-style "fg=$tmux_conf_theme_window_status_fg,bg=$tmux_conf_theme_window_status_bg,$tmux_conf_theme_window_status_attr"
setw -g window-status-format "$tmux_conf_theme_window_status_format"
setw -g window-status-current-style "fg=$tmux_conf_theme_window_status_current_fg,bg=$tmux_conf_theme_window_status_current_bg,$tmux_conf_theme_window_status_current_attr"
setw -g window-status-current-format "$tmux_conf_theme_window_status_current_format"

tmux_conf_theme_window_status_activity_fg='default'
tmux_conf_theme_window_status_activity_bg='default'
tmux_conf_theme_window_status_activity_attr='underscore'
setw -g window-status-activity-style "fg=$tmux_conf_theme_window_status_activity_fg,bg=$tmux_conf_theme_window_status_activity_bg,$tmux_conf_theme_window_status_activity_attr"

tmux_conf_theme_window_status_bell_fg='#ffff00' # yellow
tmux_conf_theme_window_status_bell_bg='default'
tmux_conf_theme_window_status_bell_attr='blink,bold'
setw -g window-status-bell-style "fg=$tmux_conf_theme_window_status_bell_fg,bg=$tmux_conf_theme_window_status_bell_bg,$tmux_conf_theme_window_status_bell_attr"

tmux_conf_theme_window_status_last_fg='#595b6f'         # light blue
tmux_conf_theme_window_status_last_bg='default'
tmux_conf_theme_window_status_last_attr='none'
setw -g window-status-last-style "fg=$tmux_conf_theme_window_status_last_fg,bg=$tmux_conf_theme_window_status_last_bg,$tmux_conf_theme_window_status_last_attr"

