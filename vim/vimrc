".vim -> dotfiles/vim
set nocompatible              " be iMproved, required
filetype off                  " required

" ================ General Config ====================
"
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set cursorline

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" =============== Plug Initialization ===============
" " This loads all the plugins specified in ~/.vim/plug.vim
" " Use plug plugin to manage all other plugins
if filereadable(expand("~/.vim/plug.vim"))
  source ~/.vim/plug.vim
endif

" ================ Turn Off Swap Files ==============
"
set noswapfile
set nobackup
set nowb

" ================ Indentation ======================
"
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=4
set expandtab

filetype plugin on
filetype indent on

set tags=./tags;,tags;


" Display tabs and trailing spaces visually
" set list listchars=tab:\ \ ,trail:Â·
"
set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" Use spacebar for folding.
nnoremap <space> za
vnoremap <space> zf

" Use ; for commands.
nnoremap ; :

" Rotate between last two files
nnoremap ,n <C-^>
nnoremap ,gb <C-O>

" ================ Scrolling ========================
"
set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

nnoremap <silent> \t :NERDTreeToggle<CR>

" search for visually hightlighted text
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>


let python_highlight_all=1
syntax enable
syntax on

so ~/.vim/settings.vim

" Molokai
" colorscheme molokai
" let g:molokai_original = 1

" Draculalet g:dracula_italic = 0
let g:dracula_italic = 0
colorscheme dracula

" Search highlight
" set hlsearch
" hi Search ctermbg=LightYellow
" hi Search ctermfg=Red
" Press Space to turn off highlighting and clear any message already displayed.
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

set clipboard=unnamed

autocmd Filetype html setlocal ts=2 sts=2 sw=2
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2
autocmd Filetype javascript setlocal ts=2 sts=2 sw=2
autocmd Filetype python setlocal ts=4 sts=4 sw=4


set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.class,*/target/*,*/node_modules/*,*/bower_components/*
set wildignore+=*/dist/*

set re=1
noremap <F4> :set hlsearch! hlsearch?<CR>

" Ack
let g:ackprg = 'ag --vimgrep --smart-case'
cnoreabbrev ag Ack
cnoreabbrev aG Ack
cnoreabbrev Ag Ack
cnoreabbrev AG Ack


" Yank path of current buffer
:command! CurrentPath let @+ = expand('%:p')

" Maps ESC to exit terminal's insert mode
  if has('nvim') || has('gui_running')
    tnoremap <Esc> <C-\><C-n>

    autocmd! FileType fzf
    autocmd  FileType fzf set laststatus=0 noshowmode noruler
          \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler
  endif

" Tabs and panes
nnoremap <C-h> <c-w>h
nnoremap <C-j> <c-w>j
nnoremap <C-k> <c-w>k
nnoremap <C-l> <c-w>l

inoremap <C-h> <Esc><c-w>h
inoremap <C-j> <Esc><c-w>j
inoremap <C-k> <Esc><c-w>k
inoremap <C-l> <Esc><c-w>l

vnoremap <C-h> <Esc><c-w>h
vnoremap <C-j> <Esc><c-w>j
vnoremap <C-k> <Esc><c-w>k
vnoremap <C-l> <Esc><c-w>l

tnoremap <C-h> <c-\><c-n><c-w>h
tnoremap <C-j> <c-\><c-n><c-w>j
tnoremap <C-k> <c-\><c-n><c-w>k
tnoremap <C-l> <c-\><c-n><c-w>l

" Use nvim terminal instead of tmux
" " Sets mappings for moving between tabs
" nnoremap <C-a>h :tabp<CR>
" nnoremap <C-a>l :tabn<CR>

" inoremap <C-a>h <Esc>:tabp<CR>
" inoremap <C-a>l <Esc>:tabn<CR>

" vnoremap <C-a>h <Esc>:tabp<CR>
" vnoremap <C-a>l <Esc>:tabn<CR>

" tnoremap <C-a>h <c-\><c-n>:tabp<CR>
" tnoremap <C-a>l <c-\><c-n>:tabn<CR>

" " Maps ctrl-a + c to open a new tab window
" nnoremap <C-a>c :tabnew +terminal<CR>
" tnoremap <C-a>c <C-\><C-n>:tabnew +terminal<CR>

" " Maps ctrl-a + h to open a new horizontal split with a terminal
" nnoremap <C-a>h :new +terminal<CR>
" tnoremap <C-a>h <C-\><C-n>:new +terminal<CR>

" " Maps ctrl-a + v to open a new vertical split with a terminal
" nnoremap <C-a>v :vnew +terminal<CR>
" tnoremap <C-a>v <C-\><C-n>:vnew +terminal<cr>

" nnoremap <C-a>1 1gt
" nnoremap <C-a>2 2gt
" nnoremap <C-a>3 3gt
" nnoremap <C-a>4 4gt
" nnoremap <C-a>5 5gt


" NeoVim
augroup neovim_terminal
  autocmd!

  " Enter Terminal-mode (insert) automatically
  autocmd TermOpen * startinsert

  " Disables number lines on terminal buffers
  autocmd TermOpen * :set nonumber norelativenumber
augroup END

" Edit files within Nvim's terminal without nesting sessions.
augroup prevent_nested_edit

  autocmd VimEnter * if !empty($NVIM_LISTEN_ADDRESS) && $NVIM_LISTEN_ADDRESS !=# v:servername
        \ |let g:r=jobstart(['nc', '-U', $NVIM_LISTEN_ADDRESS],{'rpc':v:true})
        \ |let g:f=fnameescape(expand('%:p'))
        \ |noau bwipe
        \ |call rpcrequest(g:r, "nvim_command", "edit ".g:f)
        \ |call rpcrequest(g:r, "nvim_command", "call lib#SetNumberDisplay()")
        \ |qa
        \ |endif


augroup END

" augroup startup
" 	autocmd!

" 	" save whenever things change
" 	autocmd TextChanged,InsertLeave * call lib#SaveAndRestoreVisualSelectionMarks()

" 	" turn numbers on for normal buffers; turn them off for terminal buffers
" 	autocmd TermOpen,BufWinEnter * call lib#SetNumberDisplay()

" 	" avoid nesting vim
" 	autocmd VimEnter * call lib#SplitWithoutNesting()

" 	" enter insert mode whenever we're in a terminal
" 	autocmd TermOpen,BufWinEnter,BufEnter term://* startinsert
" augroup END
